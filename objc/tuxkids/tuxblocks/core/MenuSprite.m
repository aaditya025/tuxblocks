//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: C:\Users\Thomas\Documents\Eclipse\Tux\tuxblocks\core\src\main\java\tuxkids\tuxblocks\core\MenuSprite.java
//
//  Created by Thomas on 7/1/13.
//

#import "IOSClass.h"
#import "playn/core/CanvasImage.h"
#import "playn/core/Font.h"
#import "playn/core/Graphics.h"
#import "playn/core/GroupLayer.h"
#import "playn/core/Image.h"
#import "playn/core/ImageLayer.h"
#import "playn/core/Layer.h"
#import "playn/core/TextFormat.h"
#import "tripleplay/util/Colors.h"
#import "tuxkids/tuxblocks/core/Constant.h"
#import "tuxkids/tuxblocks/core/MenuSprite.h"
#import "tuxkids/tuxblocks/core/PlayNObject.h"
#import "tuxkids/tuxblocks/core/utils/CanvasUtils.h"

@implementation TBMenuSprite

static float TBMenuSprite_DEFAULT_ALPHA_;

- (id<PlaynCoreGroupLayer>)layer_ {
  return layer__;
}
- (void)setLayer_:(id<PlaynCoreGroupLayer>)layer_ {
  JreOperatorRetainedAssign(&layer__, self, layer_);
}
@synthesize layer_ = layer__;
- (id<PlaynCoreImageLayer>)background {
  return background_;
}
- (void)setBackground:(id<PlaynCoreImageLayer>)background {
  JreOperatorRetainedAssign(&background_, self, background);
}
@synthesize background = background_;
- (id<PlaynCoreImageLayer>)textLayer {
  return textLayer_;
}
- (void)setTextLayer:(id<PlaynCoreImageLayer>)textLayer {
  JreOperatorRetainedAssign(&textLayer_, self, textLayer);
}
@synthesize textLayer = textLayer_;
- (NSString *)text_ {
  return text__;
}
- (void)setText_:(NSString *)text_ {
  JreOperatorRetainedAssign(&text__, self, text_);
}
@synthesize text_ = text__;
@synthesize width_ = width__;
@synthesize height_ = height__;
- (PlaynCoreTextFormat *)textFormat {
  return textFormat_;
}
- (void)setTextFormat:(PlaynCoreTextFormat *)textFormat {
  JreOperatorRetainedAssign(&textFormat_, self, textFormat);
}
@synthesize textFormat = textFormat_;
@synthesize textColor_ = textColor__;

+ (float)DEFAULT_ALPHA {
  return TBMenuSprite_DEFAULT_ALPHA_;
}

+ (float *)DEFAULT_ALPHARef {
  return &TBMenuSprite_DEFAULT_ALPHA_;
}

- (id<PlaynCoreLayer>)layer {
  return layer__;
}

- (float)width {
  return width__;
}

- (float)height {
  return height__;
}

- (NSString *)text {
  return text__;
}

- (int)textColor {
  return textColor__;
}

- (void)setTextColorWithInt:(int)textColor {
  self.textColor_ = textColor;
}

- (void)setTextWithNSString:(NSString *)text {
  if (text == nil) {
    (void) [((id<PlaynCoreImageLayer>) NIL_CHK(textLayer_)) setImageWithPlaynCoreImage:nil];
  }
  else if (![text isEqual:self.text_]) {
    (void) [((id<PlaynCoreImageLayer>) NIL_CHK(textLayer_)) setImageWithPlaynCoreImage:[TBCanvasUtils createStringWithPlaynCoreTextFormat:textFormat_ withNSString:text withInt:textColor__]];
    [TBPlayNObject centerImageLayerWithPlaynCoreImageLayer:textLayer_];
  }
  self.text_ = text;
}

- (id)initWithFloat:(float)width
          withFloat:(float)height {
  if ((self = [super init])) {
    textColor__ = [TripleplayUtilColors BLACK];
    self.width_ = width;
    self.height_ = height;
    JreOperatorRetainedAssign(&layer__, self, [((id<PlaynCoreGraphics>) [TBPlayNObject graphics]) createGroupLayer]);
    JreOperatorRetainedAssign(&background_, self, [((id<PlaynCoreGraphics>) [TBPlayNObject graphics]) createImageLayerWithPlaynCoreImage:[TBCanvasUtils createRectWithFloat:width withFloat:height withInt:[TripleplayUtilColors LIGHT_GRAY] withFloat:1 withInt:[TripleplayUtilColors DARK_GRAY]]]);
    (void) [((id<PlaynCoreImageLayer>) NIL_CHK(background_)) setAlphaWithFloat:TBMenuSprite_DEFAULT_ALPHA_];
    (void) [((id<PlaynCoreImageLayer>) NIL_CHK(background_)) setDepthWithFloat:-1];
    [((id<PlaynCoreGroupLayer>) NIL_CHK(layer__)) addWithPlaynCoreLayer:background_];
    JreOperatorRetainedAssign(&textFormat_, self, [((PlaynCoreTextFormat *) [[[PlaynCoreTextFormat alloc] init] autorelease]) withFontWithPlaynCoreFont:[((id<PlaynCoreGraphics>) [TBPlayNObject graphics]) createFontWithNSString:[TBConstant FONT_NAME] withPlaynCoreFont_StyleEnum:[PlaynCoreFont_StyleEnum PLAIN] withFloat:height / 2.0f]]);
    JreOperatorRetainedAssign(&textLayer_, self, [((id<PlaynCoreGraphics>) [TBPlayNObject graphics]) createImageLayer]);
    (void) [((id<PlaynCoreImageLayer>) NIL_CHK(textLayer_)) setTranslationWithFloat:width / 2 withFloat:height / 2];
    [((id<PlaynCoreGroupLayer>) NIL_CHK(layer__)) addWithPlaynCoreLayer:textLayer_];
  }
  return self;
}

+ (void)initialize {
  if (self == [TBMenuSprite class]) {
    TBMenuSprite_DEFAULT_ALPHA_ = 0.75f;
  }
}

- (void)dealloc {
  JreOperatorRetainedAssign(&textFormat_, self, nil);
  JreOperatorRetainedAssign(&text__, self, nil);
  JreOperatorRetainedAssign(&textLayer_, self, nil);
  JreOperatorRetainedAssign(&background_, self, nil);
  JreOperatorRetainedAssign(&layer__, self, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TBMenuSprite *typedCopy = (TBMenuSprite *) copy;
  typedCopy.layer_ = layer__;
  typedCopy.background = background_;
  typedCopy.textLayer = textLayer_;
  typedCopy.text_ = text__;
  typedCopy.width_ = width__;
  typedCopy.height_ = height__;
  typedCopy.textFormat = textFormat_;
  typedCopy.textColor_ = textColor__;
}

@end
