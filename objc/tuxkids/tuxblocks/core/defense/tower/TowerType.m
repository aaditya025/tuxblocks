//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: C:\Users\Thomas\Documents\Eclipse\Tux\tuxblocks\core\src\main\java\tuxkids\tuxblocks\core\defense\tower\TowerType.java
//
//  Created by Thomas on 7/1/13.
//

#import "java/lang/Enum.h"
#import "java/lang/IllegalArgumentException.h"
#import "tuxkids/tuxblocks/core/defense/tower/BigShooter.h"
#import "tuxkids/tuxblocks/core/defense/tower/Freezer.h"
#import "tuxkids/tuxblocks/core/defense/tower/HorizontalWall.h"
#import "tuxkids/tuxblocks/core/defense/tower/PeaShooter.h"
#import "tuxkids/tuxblocks/core/defense/tower/Tower.h"
#import "tuxkids/tuxblocks/core/defense/tower/TowerType.h"
#import "tuxkids/tuxblocks/core/defense/tower/VerticalWall.h"
#import "tuxkids/tuxblocks/core/defense/tower/Zapper.h"


static TBTowerTypeEnum *TBTowerTypeEnum_PeaShooter;
static TBTowerTypeEnum *TBTowerTypeEnum_Freezer;
static TBTowerTypeEnum *TBTowerTypeEnum_BigShooter;
static TBTowerTypeEnum *TBTowerTypeEnum_Zapper;
static TBTowerTypeEnum *TBTowerTypeEnum_VerticalWall;
static TBTowerTypeEnum *TBTowerTypeEnum_HorizontalWall;
IOSObjectArray *TBTowerTypeEnum_values;

@implementation TBTowerTypeEnum

+ (TBTowerTypeEnum *)PeaShooter {
  return TBTowerTypeEnum_PeaShooter;
}
+ (TBTowerTypeEnum *)Freezer {
  return TBTowerTypeEnum_Freezer;
}
+ (TBTowerTypeEnum *)BigShooter {
  return TBTowerTypeEnum_BigShooter;
}
+ (TBTowerTypeEnum *)Zapper {
  return TBTowerTypeEnum_Zapper;
}
+ (TBTowerTypeEnum *)VerticalWall {
  return TBTowerTypeEnum_VerticalWall;
}
+ (TBTowerTypeEnum *)HorizontalWall {
  return TBTowerTypeEnum_HorizontalWall;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

- (TBTower *)instance_ {
  return instance__;
}
- (void)setInstance_:(TBTower *)instance_ {
  JreOperatorRetainedAssign(&instance__, self, instance_);
}
@synthesize instance_ = instance__;

- (TBTower *)instance {
  return instance__;
}

- (TBTower *)newInstance OBJC_METHOD_FAMILY_NONE {
  return [((TBTower *) NIL_CHK(instance__)) copy__];
}

- (int)index {
  return [self ordinal];
}

- (id)initWithTBTower:(TBTower *)instance
         withNSString:(NSString *)name
              withInt:(int)ordinal {
  if ((self = [super initWithNSString:name withInt:ordinal])) {
    self.instance_ = instance;
  }
  return self;
}

+ (void)initialize {
  if (self == [TBTowerTypeEnum class]) {
    TBTowerTypeEnum_PeaShooter = [[TBTowerTypeEnum alloc] initWithTBTower:[[[TBPeaShooter alloc] init] autorelease] withNSString:@"TBTowerType_PeaShooter" withInt:0];
    TBTowerTypeEnum_Freezer = [[TBTowerTypeEnum alloc] initWithTBTower:[[[TBFreezer alloc] init] autorelease] withNSString:@"TBTowerType_Freezer" withInt:1];
    TBTowerTypeEnum_BigShooter = [[TBTowerTypeEnum alloc] initWithTBTower:[[[TBBigShooter alloc] init] autorelease] withNSString:@"TBTowerType_BigShooter" withInt:2];
    TBTowerTypeEnum_Zapper = [[TBTowerTypeEnum alloc] initWithTBTower:[[[TBZapper alloc] init] autorelease] withNSString:@"TBTowerType_Zapper" withInt:3];
    TBTowerTypeEnum_VerticalWall = [[TBTowerTypeEnum alloc] initWithTBTower:[[[TBVerticalWall alloc] init] autorelease] withNSString:@"TBTowerType_VerticalWall" withInt:4];
    TBTowerTypeEnum_HorizontalWall = [[TBTowerTypeEnum alloc] initWithTBTower:[[[TBHorizontalWall alloc] init] autorelease] withNSString:@"TBTowerType_HorizontalWall" withInt:5];
    TBTowerTypeEnum_values = [[IOSObjectArray alloc] initWithObjects:(id[]){ TBTowerTypeEnum_PeaShooter, TBTowerTypeEnum_Freezer, TBTowerTypeEnum_BigShooter, TBTowerTypeEnum_Zapper, TBTowerTypeEnum_VerticalWall, TBTowerTypeEnum_HorizontalWall, nil } count:6 type:[IOSClass classWithClass:[TBTowerTypeEnum class]]];
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithArray:TBTowerTypeEnum_values];
}

+ (TBTowerTypeEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < [TBTowerTypeEnum_values count]; i++) {
    TBTowerTypeEnum *e = [TBTowerTypeEnum_values objectAtIndex:i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

@end
