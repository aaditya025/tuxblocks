//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: C:\Users\Thomas\Documents\Eclipse\Tux\tuxblocks\core\src\main\java\tuxkids\tuxblocks\core\defense\projectile\Snow.java
//
//  Created by Thomas on 7/1/13.
//

#import "java/lang/Throwable.h"
#import "playn/core/Assets.h"
#import "playn/core/Color.h"
#import "playn/core/Image.h"
#import "playn/core/ImageLayer.h"
#import "playn/core/Layer.h"
#import "tuxkids/tuxblocks/core/Constant.h"
#import "tuxkids/tuxblocks/core/PlayNObject.h"
#import "tuxkids/tuxblocks/core/defense/Grid.h"
#import "tuxkids/tuxblocks/core/defense/projectile/Snow.h"
#import "tuxkids/tuxblocks/core/defense/tower/Tower.h"
#import "tuxkids/tuxblocks/core/defense/walker/Walker.h"
#import "tuxkids/tuxblocks/core/utils/CanvasUtils.h"

@implementation TBSnow

static id<PlaynCoreImage> TBSnow_image_;

+ (id<PlaynCoreImage>)image {
  return TBSnow_image_;
}

+ (void)setImage:(id<PlaynCoreImage>)image {
  JreOperatorRetainedAssign(&TBSnow_image_, self, image);
}

- (void)placeWithTBDGrid:(TBDGrid *)grid
            withTBWalker:(TBWalker *)target
             withTBTower:(TBTower *)source {
  [super placeWithTBDGrid:grid withTBWalker:target withTBTower:source];
  (void) [((id<PlaynCoreImageLayer>) NIL_CHK(layer__)) setScaleWithFloat:0.7f];
  (void) [((id<PlaynCoreImageLayer>) NIL_CHK(layer__)) setAlphaWithFloat:0.5f];
}

- (float)maxSpeed {
  return 0.08f;
}

- (float)acceleration {
  return 0.01f;
}

- (id<PlaynCoreImage>)createImage {
  if (TBSnow_image_ == nil) {
    JreOperatorRetainedAssign(&TBSnow_image_, self, [((id<PlaynCoreAssets>) [TBPlayNObject assets]) getImageWithNSString:@"images/puff.png"]);
    [TBSnow_image_ addCallbackWithPlaynCoreUtilCallback:[[[TBSnow_$1 alloc] init] autorelease]];
  }
  return TBSnow_image_;
}

- (id)init {
  return [super init];
}

- (void)dealloc {
  [super dealloc];
}

@end
@implementation TBSnow_$1

- (void)onSuccessWithId:(id<PlaynCoreImage>)result {
  [TBSnow setImage:[TBCanvasUtils tintImageWithPlaynCoreImage:[TBSnow image] withInt:[PlaynCoreColor rgbWithInt:150 withInt:150 withInt:255]]];
}

- (void)onFailureWithJavaLangThrowable:(JavaLangThrowable *)cause {
}

- (id)init {
  return [super init];
}

- (void)dealloc {
  [super dealloc];
}

@end
