//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: C:\Users\Thomas\Documents\Eclipse\Tux\tuxblocks\core\src\main\java\tuxkids\tuxblocks\core\defense\projectile\Projectile.java
//
//  Created by Thomas on 7/1/13.
//

#import "playn/core/Graphics.h"
#import "playn/core/Image.h"
#import "playn/core/ImageLayer.h"
#import "playn/core/Layer.h"
#import "pythagoras/f/Vector.h"
#import "tuxkids/tuxblocks/core/PlayNObject.h"
#import "tuxkids/tuxblocks/core/defense/Grid.h"
#import "tuxkids/tuxblocks/core/defense/GridObject.h"
#import "tuxkids/tuxblocks/core/defense/projectile/Projectile.h"
#import "tuxkids/tuxblocks/core/defense/tower/Tower.h"
#import "tuxkids/tuxblocks/core/defense/walker/Walker.h"

@implementation TBProjectile

- (id<PlaynCoreImageLayer>)layer_ {
  return layer__;
}
- (void)setLayer_:(id<PlaynCoreImageLayer>)layer_ {
  JreOperatorRetainedAssign(&layer__, self, layer_);
}
@synthesize layer_ = layer__;
- (TBWalker *)target_ {
  return target__;
}
- (void)setTarget_:(TBWalker *)target_ {
  JreOperatorRetainedAssign(&target__, self, target_);
}
@synthesize target_ = target__;
@synthesize damage = damage_;
- (TBTower *)source_ {
  return source__;
}
- (void)setSource_:(TBTower *)source_ {
  JreOperatorRetainedAssign(&source__, self, source_);
}
@synthesize source_ = source__;

- (id<PlaynCoreImage>)createImage {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<PlaynCoreLayer>)layer {
  return layer__;
}

- (TBWalker *)target {
  return target__;
}

- (TBTower *)source {
  return source__;
}

- (void)placeWithTBDGrid:(TBDGrid *)grid
            withTBWalker:(TBWalker *)target
             withTBTower:(TBTower *)source {
  [self placeWithTBDGrid:grid];
  self.target_ = target;
  self.source_ = source;
  self.damage = [((TBTower *) NIL_CHK(source)) damage];
  JreOperatorRetainedAssign(&layer__, self, [((id<PlaynCoreGraphics>) [TBPlayNObject graphics]) createImageLayerWithPlaynCoreImage:[self createImage]]);
  (void) [((id<PlaynCoreImageLayer>) NIL_CHK(layer__)) setDepthWithFloat:[((TBDGrid *) NIL_CHK(grid)) rows] * [((TBDGrid *) NIL_CHK(grid)) cols] * TBDGridObject_MAX_BASE_DEPTH];
}

- (BOOL)doUpdateWithInt:(int)delta {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)updateWithInt:(int)delta {
  if ([self doUpdateWithInt:delta]) {
    [self onFinish];
    return YES;
  }
  return NO;
}

- (void)onFinish {
  [((id<PlaynCoreImageLayer>) NIL_CHK(layer__)) destroy];
}

- (void)dealDamage {
  [((TBDGrid *) NIL_CHK(grid_)) dealDamageWithTBTower:source__ withTBWalker:target__ withFloat:damage_ withPythagorasFVector:[self getHitPosition]];
}

- (PythagorasFVector *)getHitPosition {
  return [((TBWalker *) NIL_CHK(target__)) position];
}

- (id)init {
  return [super init];
}

- (void)dealloc {
  JreOperatorRetainedAssign(&source__, self, nil);
  JreOperatorRetainedAssign(&target__, self, nil);
  JreOperatorRetainedAssign(&layer__, self, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TBProjectile *typedCopy = (TBProjectile *) copy;
  typedCopy.layer_ = layer__;
  typedCopy.target_ = target__;
  typedCopy.damage = damage_;
  typedCopy.source_ = source__;
}

@end
