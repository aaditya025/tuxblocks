//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/flump/Texture.java
//
//  Created by Thomas on 7/1/13.
//

#import "java/lang/Float.h"
#import "playn/core/Graphics.h"
#import "playn/core/Image.h"
#import "playn/core/ImageLayer.h"
#import "playn/core/Json.h"
#import "playn/core/Layer.h"
#import "playn/core/PlayN.h"
#import "playn/core/util/Clock.h"
#import "pythagoras/f/IPoint.h"
#import "tripleplay/flump/KeyframeData.h"
#import "tripleplay/flump/Symbol.h"

@implementation TripleplayFlumpTexture

- (id<PlaynCoreImageLayer>)_layer {
  return _layer_;
}
- (void)set_layer:(id<PlaynCoreImageLayer>)_layer {
  JreOperatorRetainedAssign(&_layer_, self, _layer);
}
@synthesize _layer = _layer_;

- (id)initWithTripleplayFlumpTexture_Symbol:(TripleplayFlumpTexture_Symbol *)symbol {
  if ((self = [super init])) {
    JreOperatorRetainedAssign(&_layer_, self, [((id<PlaynCoreGraphics>) [PlaynCorePlayN graphics]) createImageLayerWithPlaynCoreImage:((TripleplayFlumpTexture_Symbol *) NIL_CHK(symbol)).region]);
    (void) [((id<PlaynCoreImageLayer>) NIL_CHK(_layer_)) setOriginWithFloat:[((id<PythagorasFIPoint>) NIL_CHK(symbol.origin)) x] withFloat:[((id<PythagorasFIPoint>) NIL_CHK(symbol.origin)) y]];
  }
  return self;
}

- (id<PlaynCoreImageLayer>)layer {
  return _layer_;
}

- (void)paintWithPlaynCoreUtilClock:(id<PlaynCoreUtilClock>)clock {
}

- (void)paintWithFloat:(float)dt {
}

- (void)dealloc {
  JreOperatorRetainedAssign(&_layer_, self, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayFlumpTexture *typedCopy = (TripleplayFlumpTexture *) copy;
  typedCopy._layer = _layer_;
}

@end
@implementation TripleplayFlumpTexture_Symbol

- (id<PlaynCoreImage_Region>)region {
  return region_;
}
- (void)setRegion:(id<PlaynCoreImage_Region>)region {
  JreOperatorRetainedAssign(&region_, self, region);
}
@synthesize region = region_;
- (id<PythagorasFIPoint>)origin {
  return origin_;
}
- (void)setOrigin:(id<PythagorasFIPoint>)origin {
  JreOperatorRetainedAssign(&origin_, self, origin);
}
@synthesize origin = origin_;
- (NSString *)_name {
  return _name_;
}
- (void)set_name:(NSString *)_name {
  JreOperatorRetainedAssign(&_name_, self, _name);
}
@synthesize _name = _name_;

- (id)initWithPlaynCoreJson_Object:(id<PlaynCoreJson_Object>)json
                withPlaynCoreImage:(id<PlaynCoreImage>)atlas {
  if ((self = [super init])) {
    JreOperatorRetainedAssign(&_name_, self, [((id<PlaynCoreJson_Object>) NIL_CHK(json)) getStringWithNSString:@"symbol"]);
    JreOperatorRetainedAssign(&origin_, self, [TripleplayFlumpKeyframeData getPointWithPlaynCoreJson_Object:json withNSString:@"origin" withFloat:0 withFloat:0]);
    id<PlaynCoreJson_TypedArray> rect = ((id<PlaynCoreJson_TypedArray>) [((id<PlaynCoreJson_Object>) NIL_CHK(json)) getArrayWithNSString:@"rect" withIOSClass:[IOSClass classWithClass:[JavaLangFloat class]]]);
    JreOperatorRetainedAssign(&region_, self, [((id<PlaynCoreImage>) NIL_CHK(atlas)) subImageWithFloat:[((JavaLangFloat *) [((id<PlaynCoreJson_TypedArray>) NIL_CHK(rect)) getWithInt:0]) floatValue] withFloat:[((JavaLangFloat *) [((id<PlaynCoreJson_TypedArray>) NIL_CHK(rect)) getWithInt:1]) floatValue] withFloat:[((JavaLangFloat *) [((id<PlaynCoreJson_TypedArray>) NIL_CHK(rect)) getWithInt:2]) floatValue] withFloat:[((JavaLangFloat *) [((id<PlaynCoreJson_TypedArray>) NIL_CHK(rect)) getWithInt:3]) floatValue]]);
  }
  return self;
}

- (NSString *)name {
  return _name_;
}

- (TripleplayFlumpTexture *)createInstance {
  return [[[TripleplayFlumpTexture alloc] initWithTripleplayFlumpTexture_Symbol:self] autorelease];
}

- (void)dealloc {
  JreOperatorRetainedAssign(&_name_, self, nil);
  JreOperatorRetainedAssign(&origin_, self, nil);
  JreOperatorRetainedAssign(&region_, self, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayFlumpTexture_Symbol *typedCopy = (TripleplayFlumpTexture_Symbol *) copy;
  typedCopy.region = region_;
  typedCopy.origin = origin_;
  typedCopy._name = _name_;
}

@end
