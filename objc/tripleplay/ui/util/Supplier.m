//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/ui/util/Supplier.java
//
//  Created by Thomas on 7/1/13.
//

#import "Element.h"
#import "GroupLayer.h"

@implementation TripleplayUiUtilSupplier

+ (TripleplayUiUtilSupplier *)auto__WithTripleplayUiElement:(TripleplayUiElement *)elem {
  return [[[TripleplayUiUtilSupplier_$1 alloc] initWithTripleplayUiElement:elem] autorelease];
}

- (TripleplayUiElement *)get {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)destroy {
}

- (id)init {
  return [super init];
}

- (void)dealloc {
  [super dealloc];
}

@end
@implementation TripleplayUiUtilSupplier_$1

- (TripleplayUiElement *)element {
  return element_;
}
- (void)setElement:(TripleplayUiElement *)element {
  JreOperatorRetainedAssign(&element_, self, element);
}
@synthesize element = element_;
- (TripleplayUiElement *)val$elem {
  return val$elem_;
}
- (void)setVal$elem:(TripleplayUiElement *)val$elem {
  JreOperatorRetainedAssign(&val$elem_, self, val$elem);
}
@synthesize val$elem = val$elem_;

- (TripleplayUiElement *)get {
  TripleplayUiElement *ret = element_;
  JreOperatorRetainedAssign(&element_, self, nil);
  return ret;
}

- (void)destroy {
  if (element_ != nil) [((id<PlaynCoreGroupLayer>) NIL_CHK(element_.layer)) destroy];
  JreOperatorRetainedAssign(&element_, self, nil);
}

- (id)initWithTripleplayUiElement:(TripleplayUiElement *)capture$0 {
  if ((self = [super init])) {
    JreOperatorRetainedAssign(&val$elem_, self, capture$0);
    JreOperatorRetainedAssign(&element_, self, val$elem_);
  }
  return self;
}

- (void)dealloc {
  JreOperatorRetainedAssign(&val$elem_, self, nil);
  JreOperatorRetainedAssign(&element_, self, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiUtilSupplier_$1 *typedCopy = (TripleplayUiUtilSupplier_$1 *) copy;
  typedCopy.element = element_;
  typedCopy.val$elem = val$elem_;
}

@end
