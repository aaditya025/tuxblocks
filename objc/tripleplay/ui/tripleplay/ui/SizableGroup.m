//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/ui/SizableGroup.java
//
//  Created by Thomas on 7/1/13.
//

#import "pythagoras/f/IDimension.h"
#import "react/Connection.h"
#import "react/UnitSlot.h"
#import "tripleplay/ui/Element.h"
#import "tripleplay/ui/Layout.h"
#import "tripleplay/util/DimensionValue.h"

@implementation TripleplayUiSizableGroup

- (TripleplayUtilDimensionValue *)preferredSize {
  return preferredSize_;
}
- (void)setPreferredSize:(TripleplayUtilDimensionValue *)preferredSize {
  JreOperatorRetainedAssign(&preferredSize_, self, preferredSize);
}
@synthesize preferredSize = preferredSize_;

- (id)initWithTripleplayUiLayout:(TripleplayUiLayout *)layout {
  return [self initTripleplayUiSizableGroupWithTripleplayUiLayout:layout withFloat:0 withFloat:0];
}

- (id)initWithTripleplayUiLayout:(TripleplayUiLayout *)layout
       withPythagorasFIDimension:(id<PythagorasFIDimension>)size {
  return [self initTripleplayUiSizableGroupWithTripleplayUiLayout:layout withFloat:[((id<PythagorasFIDimension>) NIL_CHK(size)) width] withFloat:[((id<PythagorasFIDimension>) NIL_CHK(size)) height]];
}

- (id)initTripleplayUiSizableGroupWithTripleplayUiLayout:(TripleplayUiLayout *)layout
                                               withFloat:(float)wid
                                               withFloat:(float)hei {
  if ((self = [super initWithTripleplayUiLayout:layout])) {
    JreOperatorRetainedAssign(&preferredSize_, self, [[[TripleplayUtilDimensionValue alloc] initWithFloat:0 withFloat:0] autorelease]);
    [((TripleplayUtilDimensionValue *) NIL_CHK(preferredSize_)) updateWithFloat:wid withFloat:hei];
    (void) [((TripleplayUtilDimensionValue *) NIL_CHK(preferredSize_)) connectWithReactValueView_Listener:[self invalidateSlot]];
  }
  return self;
}

- (id)initWithTripleplayUiLayout:(TripleplayUiLayout *)layout
                       withFloat:(float)wid
                       withFloat:(float)hei {
  return [self initTripleplayUiSizableGroupWithTripleplayUiLayout:layout withFloat:wid withFloat:hei];
}

- (TripleplayUiElement_LayoutData *)createLayoutDataWithFloat:(float)hintX
                                                    withFloat:(float)hintY {
  return [[[TripleplayUiElement_SizableLayoutData alloc] initWithTripleplayUiElement:self withTripleplayUiElement_LayoutData:[super createLayoutDataWithFloat:hintX withFloat:hintY] withPythagorasFIDimension:((id<PythagorasFIDimension>) [((TripleplayUtilDimensionValue *) NIL_CHK(preferredSize_)) get])] autorelease];
}

- (void)dealloc {
  JreOperatorRetainedAssign(&preferredSize_, self, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiSizableGroup *typedCopy = (TripleplayUiSizableGroup *) copy;
  typedCopy.preferredSize = preferredSize_;
}

@end
