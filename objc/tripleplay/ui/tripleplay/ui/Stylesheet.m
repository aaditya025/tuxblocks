//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/ui/Stylesheet.java
//
//  Created by Thomas on 7/1/13.
//

#import "IOSClass.h"
#import "IOSObjectArray.h"
#import "java/lang/RuntimeException.h"
#import "java/util/HashMap.h"
#import "java/util/Map.h"
#import "tripleplay/ui/Element.h"
#import "tripleplay/ui/Style.h"
#import "tripleplay/ui/Styles.h"

@implementation TripleplayUiStylesheet

- (id<JavaUtilMap>)_styles {
  return _styles_;
}
- (void)set_styles:(id<JavaUtilMap>)_styles {
  JreOperatorRetainedAssign(&_styles_, self, _styles);
}
@synthesize _styles = _styles_;

+ (TripleplayUiStylesheet_Builder *)builder {
  return [[[TripleplayUiStylesheet_Builder alloc] init] autorelease];
}

- (id)getWithTripleplayUiStyles_Binding:(TripleplayUiStyles_Binding *)key
                           withIOSClass:(IOSClass *)eclass
                withTripleplayUiElement:(TripleplayUiElement *)elem {
  TripleplayUiStyles *styles = ((TripleplayUiStyles *) [((id<JavaUtilMap>) NIL_CHK(_styles_)) getWithId:eclass]);
  id value = (styles == nil) ? nil : [((TripleplayUiStyles *) NIL_CHK(styles)) getWithTripleplayUiStyles_Binding:key withTripleplayUiElement:elem];
  if (value != nil) return value;
  if (!((TripleplayUiStyle *) NIL_CHK(key.style)).inherited || eclass == [IOSClass classWithClass:[TripleplayUiElement class]]) return nil;
  IOSClass *parent = [NIL_CHK(eclass) getSuperclass];
  if (parent == nil) {
    @throw [[[JavaLangRuntimeException alloc] initWithNSString:@"Your PlayN application must not be compiled with -XdisableClassMetadata. It breaks TriplePlay stylesheets."] autorelease];
  }
  return [self getWithTripleplayUiStyles_Binding:key withIOSClass:parent withTripleplayUiElement:elem];
}

- (id)initWithJavaUtilMap:(id<JavaUtilMap>)styles {
  if ((self = [super init])) {
    JreOperatorRetainedAssign(&_styles_, self, styles);
  }
  return self;
}

- (void)dealloc {
  JreOperatorRetainedAssign(&_styles_, self, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiStylesheet *typedCopy = (TripleplayUiStylesheet *) copy;
  typedCopy._styles = _styles_;
}

@end
@implementation TripleplayUiStylesheet_Builder

- (id<JavaUtilMap>)_styles {
  return _styles_;
}
- (void)set_styles:(id<JavaUtilMap>)_styles {
  JreOperatorRetainedAssign(&_styles_, self, _styles);
}
@synthesize _styles = _styles_;

- (TripleplayUiStylesheet_Builder *)addWithIOSClass:(IOSClass *)eclass
                             withTripleplayUiStyles:(TripleplayUiStyles *)styles {
  TripleplayUiStyles *ostyles = ((TripleplayUiStyles *) [((id<JavaUtilMap>) NIL_CHK(_styles_)) getWithId:eclass]);
  (void) [((id<JavaUtilMap>) NIL_CHK(_styles_)) putWithId:eclass withId:ostyles == nil ? styles : [((TripleplayUiStyles *) NIL_CHK(ostyles)) mergeWithTripleplayUiStyles:styles]];
  return self;
}

- (TripleplayUiStylesheet_Builder *)addWithIOSClass:(IOSClass *)eclass
                 withTripleplayUiStyle_BindingArray:(IOSObjectArray *)styles {
  return [self addWithIOSClass:eclass withTripleplayUiStyles:[TripleplayUiStyles makeWithTripleplayUiStyle_BindingArray:styles]];
}

- (TripleplayUiStylesheet_Builder *)addWithIOSClass:(IOSClass *)eclass
                     withTripleplayUiStyle_ModeEnum:(TripleplayUiStyle_ModeEnum *)mode
                 withTripleplayUiStyle_BindingArray:(IOSObjectArray *)styles {
  return [self addWithIOSClass:eclass withTripleplayUiStyles:[[TripleplayUiStyles none] addWithTripleplayUiStyle_ModeEnum:mode withTripleplayUiStyle_BindingArray:styles]];
}

- (TripleplayUiStylesheet *)create {
  TripleplayUiStylesheet *sheet = [[[TripleplayUiStylesheet alloc] initWithJavaUtilMap:_styles_] autorelease];
  JreOperatorRetainedAssign(&_styles_, self, nil);
  return sheet;
}

- (id)init {
  if ((self = [super init])) {
    JreOperatorRetainedAssign(&_styles_, self, [[[JavaUtilHashMap alloc] init] autorelease]);
  }
  return self;
}

- (void)dealloc {
  JreOperatorRetainedAssign(&_styles_, self, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiStylesheet_Builder *typedCopy = (TripleplayUiStylesheet_Builder *) copy;
  typedCopy._styles = _styles_;
}

@end
