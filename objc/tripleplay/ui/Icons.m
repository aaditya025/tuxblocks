//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/ui/Icons.java
//
//  Created by Thomas on 7/1/13.
//

#import "Callback.h"
#import "Graphics.h"
#import "Icon.h"
#import "Image.h"
#import "ImageLayer.h"
#import "Layer.h"
#import "PlayN.h"
#import "java/lang/Throwable.h"

@implementation TripleplayUiIcons

+ (id<TripleplayUiIcon>)imageWithPlaynCoreImage:(id<PlaynCoreImage>)image {
  return [[[TripleplayUiIcons_$1 alloc] initWithPlaynCoreImage:image] autorelease];
}

- (id)init {
  return [super init];
}

- (void)dealloc {
  [super dealloc];
}

@end
@implementation TripleplayUiIcons_$1

- (id<PlaynCoreImage>)val$image {
  return val$image_;
}
- (void)setVal$image:(id<PlaynCoreImage>)val$image {
  JreOperatorRetainedAssign(&val$image_, self, val$image);
}
@synthesize val$image = val$image_;

- (float)width {
  return [((id<PlaynCoreImage>) NIL_CHK(val$image_)) width];
}

- (float)height {
  return [((id<PlaynCoreImage>) NIL_CHK(val$image_)) height];
}

- (id<PlaynCoreLayer>)render {
  return [((id<PlaynCoreGraphics>) [PlaynCorePlayN graphics]) createImageLayerWithPlaynCoreImage:val$image_];
}

- (void)addCallbackWithPlaynCoreUtilCallback:(id<PlaynCoreUtilCallback>)callback {
  id<TripleplayUiIcon> icon = self;
  [((id<PlaynCoreImage>) NIL_CHK(val$image_)) addCallbackWithPlaynCoreUtilCallback:[[[TripleplayUiIcons_$1_$1 alloc] initWithPlaynCoreUtilCallback:callback withTripleplayUiIcon:icon] autorelease]];
}

- (id)initWithPlaynCoreImage:(id<PlaynCoreImage>)capture$0 {
  if ((self = [super init])) {
    JreOperatorRetainedAssign(&val$image_, self, capture$0);
  }
  return self;
}

- (void)dealloc {
  JreOperatorRetainedAssign(&val$image_, self, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiIcons_$1 *typedCopy = (TripleplayUiIcons_$1 *) copy;
  typedCopy.val$image = val$image_;
}

@end
@implementation TripleplayUiIcons_$1_$1

- (id<PlaynCoreUtilCallback>)val$callback {
  return val$callback_;
}
- (void)setVal$callback:(id<PlaynCoreUtilCallback>)val$callback {
  JreOperatorRetainedAssign(&val$callback_, self, val$callback);
}
@synthesize val$callback = val$callback_;
- (id<TripleplayUiIcon>)val$icon {
  return val$icon_;
}
- (void)setVal$icon:(id<TripleplayUiIcon>)val$icon {
  JreOperatorRetainedAssign(&val$icon_, self, val$icon);
}
@synthesize val$icon = val$icon_;

- (void)onSuccessWithId:(id<PlaynCoreImage>)result {
  [((id<PlaynCoreUtilCallback>) NIL_CHK(val$callback_)) onSuccessWithId:val$icon_];
}

- (void)onFailureWithJavaLangThrowable:(JavaLangThrowable *)cause {
  [((id<PlaynCoreUtilCallback>) NIL_CHK(val$callback_)) onFailureWithJavaLangThrowable:cause];
}

- (id)initWithPlaynCoreUtilCallback:(id<PlaynCoreUtilCallback>)capture$0
               withTripleplayUiIcon:(id<TripleplayUiIcon>)capture$1 {
  if ((self = [super init])) {
    JreOperatorRetainedAssign(&val$callback_, self, capture$0);
    JreOperatorRetainedAssign(&val$icon_, self, capture$1);
  }
  return self;
}

- (void)dealloc {
  JreOperatorRetainedAssign(&val$icon_, self, nil);
  JreOperatorRetainedAssign(&val$callback_, self, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  TripleplayUiIcons_$1_$1 *typedCopy = (TripleplayUiIcons_$1_$1 *) copy;
  typedCopy.val$callback = val$callback_;
  typedCopy.val$icon = val$icon_;
}

@end
