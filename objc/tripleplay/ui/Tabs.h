//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/ui/Tabs.java
//
//  Created by Thomas on 7/1/13.
//

@class IOSClass;
@class ReactValue;
@class TripleplayUiElement;
@class TripleplayUiGroup;
@class TripleplayUiSelector;
@class TripleplayUiStyle;
@class TripleplayUiTabs_Tab;
@class TripleplayUiToggleButton;
@class TripleplayUiUtilSupplier;
@protocol JavaUtilList;
@protocol TripleplayUiIcon;
@protocol TripleplayUiTabs_Highlighter;

#import "JreEmulation.h"
#import "Elements.h"
#import "Slot.h"
#import "ValueView.h"

@interface TripleplayUiTabs : TripleplayUiElements {
 @public
  TripleplayUiGroup *buttons_;
  TripleplayUiGroup *contentArea_;
  ReactValue *selected_;
  id<JavaUtilList> _tabs_;
  id<TripleplayUiTabs_Highlighter> _highlighter_;
}

@property (nonatomic, retain) TripleplayUiGroup *buttons;
@property (nonatomic, retain) TripleplayUiGroup *contentArea;
@property (nonatomic, retain) ReactValue *selected;
@property (nonatomic, retain) id<JavaUtilList> _tabs;
@property (nonatomic, retain) id<TripleplayUiTabs_Highlighter> _highlighter;

+ (id<TripleplayUiTabs_Highlighter>)NOOP_HIGHLIGHTER;
+ (void)setNOOP_HIGHLIGHTER:(id<TripleplayUiTabs_Highlighter>)NOOP_HIGHLIGHTER;
+ (TripleplayUiStyle *)HIGHLIGHTER;
+ (void)setHIGHLIGHTER:(TripleplayUiStyle *)HIGHLIGHTER;
+ (id<TripleplayUiTabs_Highlighter>)textColorHighlighterWithInt:(int)originalColor
                                                        withInt:(int)highlightColor;
- (id)init;
- (int)tabCount;
- (TripleplayUiTabs_Tab *)tabAtWithInt:(int)index;
- (TripleplayUiTabs_Tab *)addWithNSString:(NSString *)label
             withTripleplayUiUtilSupplier:(TripleplayUiUtilSupplier *)supplier;
- (TripleplayUiTabs_Tab *)addWithNSString:(NSString *)label
                  withTripleplayUiElement:(TripleplayUiElement *)panel;
- (TripleplayUiTabs_Tab *)addWithNSString:(NSString *)label
                     withTripleplayUiIcon:(id<TripleplayUiIcon>)icon
             withTripleplayUiUtilSupplier:(TripleplayUiUtilSupplier *)supplier;
- (TripleplayUiTabs_Tab *)addWithNSString:(NSString *)label
                     withTripleplayUiIcon:(id<TripleplayUiIcon>)icon
                  withTripleplayUiElement:(TripleplayUiElement *)panel;
- (void)repositionTabWithTripleplayUiTabs_Tab:(TripleplayUiTabs_Tab *)tab
                                      withInt:(int)position;
- (void)destroyTabWithTripleplayUiTabs_Tab:(TripleplayUiTabs_Tab *)tab;
- (id<TripleplayUiTabs_Highlighter>)highlighter;
- (void)clearLayoutData;
- (IOSClass *)getStyleClass;
- (void)wasAdded;
- (void)wasRemoved;
- (void)resetIndices;
- (TripleplayUiTabs_Tab *)forWidgetWithTripleplayUiElement:(TripleplayUiElement *)widget;
@end

@interface TripleplayUiTabs_Tab : NSObject {
 @public
  TripleplayUiTabs *this$0_;
  TripleplayUiToggleButton *button_;
  int _index_;
  TripleplayUiUtilSupplier *_generator_;
  TripleplayUiElement *_content_;
}

@property (nonatomic, retain) TripleplayUiTabs *this$0;
@property (nonatomic, retain) TripleplayUiToggleButton *button;
@property (nonatomic, assign) int _index;
@property (nonatomic, retain) TripleplayUiUtilSupplier *_generator;
@property (nonatomic, retain) TripleplayUiElement *_content;

- (id)initWithTripleplayUiTabs:(TripleplayUiTabs *)outer$
  withTripleplayUiToggleButton:(TripleplayUiToggleButton *)button
  withTripleplayUiUtilSupplier:(TripleplayUiUtilSupplier *)generator;
- (void)select;
- (TripleplayUiElement *)content;
- (int)index;
- (void)setVisibleWithBOOL:(BOOL)visible;
- (TripleplayUiTabs *)parent;
@end

@protocol TripleplayUiTabs_Highlighter < NSObject >
- (void)highlightWithTripleplayUiTabs_Tab:(TripleplayUiTabs_Tab *)tab
                                 withBOOL:(BOOL)highlight;
@end

@interface TripleplayUiTabs_$1 : NSObject < TripleplayUiTabs_Highlighter > {
}

- (void)highlightWithTripleplayUiTabs_Tab:(TripleplayUiTabs_Tab *)tab
                                 withBOOL:(BOOL)highlight;
- (id)init;
@end

@interface TripleplayUiTabs_$2 : NSObject < TripleplayUiTabs_Highlighter > {
 @public
  int val$highlightColor_;
  int val$originalColor_;
}

@property (nonatomic, assign) int val$highlightColor;
@property (nonatomic, assign) int val$originalColor;

- (void)highlightWithTripleplayUiTabs_Tab:(TripleplayUiTabs_Tab *)tab
                                 withBOOL:(BOOL)highlight;
- (id)initWithInt:(int)capture$0
          withInt:(int)capture$1;
@end

@interface TripleplayUiTabs_$3 : ReactSlot {
 @public
  TripleplayUiTabs *this$0_;
}

@property (nonatomic, retain) TripleplayUiTabs *this$0;

- (void)onEmitWithId:(TripleplayUiElement *)button;
- (id)initWithTripleplayUiTabs:(TripleplayUiTabs *)outer$;
@end

@interface TripleplayUiTabs_$4 : ReactValueView_Listener {
 @public
  TripleplayUiTabs *this$0_;
  TripleplayUiSelector *val$tabButtonSelector_;
}

@property (nonatomic, retain) TripleplayUiTabs *this$0;
@property (nonatomic, retain) TripleplayUiSelector *val$tabButtonSelector;

- (void)onChangeWithId:(TripleplayUiTabs_Tab *)selected
                withId:(TripleplayUiTabs_Tab *)deselected;
- (id)initWithTripleplayUiTabs:(TripleplayUiTabs *)outer$
      withTripleplayUiSelector:(TripleplayUiSelector *)capture$0;
@end
