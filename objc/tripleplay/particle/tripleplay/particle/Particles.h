//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/particle/Particles.java
//
//  Created by Thomas on 7/1/13.
//

@class ReactSignal;
@class TPEmitter;
@class TPParticleShader;
@class TPParticles_Now;
@protocol PlaynCoreGroupLayer;
@protocol PlaynCoreImage;
@protocol PlaynCoreUtilClock;

#import "JreEmulation.h"
#import "react/Slot.h"
#import "tripleplay/util/Paintable.h"

@interface TPParticles : NSObject < TripleplayUtilPaintable > {
 @public
  TPParticles_Now *_now_;
  ReactSignal *_onPaint_;
  TPParticleShader *_shader_;
}

@property (nonatomic, retain) TPParticles_Now *_now;
@property (nonatomic, retain) ReactSignal *_onPaint;
@property (nonatomic, retain) TPParticleShader *_shader;

- (TPEmitter *)createEmitterWithInt:(int)maxParticles
                 withPlaynCoreImage:(id<PlaynCoreImage>)image;
- (TPEmitter *)createEmitterWithInt:(int)maxParticles
                 withPlaynCoreImage:(id<PlaynCoreImage>)image
            withPlaynCoreGroupLayer:(id<PlaynCoreGroupLayer>)onLayer;
- (void)paintWithPlaynCoreUtilClock:(id<PlaynCoreUtilClock>)clock;
- (void)clear;
- (float)now;
- (id)init;
@end

typedef TPParticles TripleplayParticleParticles;

@interface TPParticles_Now : NSObject {
 @public
  float time_;
  float dt_;
}

@property (nonatomic, assign) float time;
@property (nonatomic, assign) float dt;

- (TPParticles_Now *)updateWithFloat:(float)delta;
- (id)init;
@end

@interface TPParticles_$1 : ReactSlot {
 @public
  TPEmitter *val$emitter_;
}

@property (nonatomic, retain) TPEmitter *val$emitter;

- (void)onEmitWithId:(TPParticles_Now *)now;
- (id)initWithTPEmitter:(TPEmitter *)capture$0;
@end
