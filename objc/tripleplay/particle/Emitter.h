//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: tripleplay/particle/Emitter.java
//
//  Created by Thomas on 7/1/13.
//

@class ReactSignal;
@class TPGenerator;
@class TPParticleBuffer;
@class TPParticles;
@protocol JavaUtilList;
@protocol PlaynCoreImage;
@protocol PlaynCoreImmediateLayer;
@protocol PlaynCoreSurface;
@protocol ReactConnection;

#import "JreEmulation.h"
#import "Destroyable.h"
#import "ImmediateLayer.h"
#import "UnitSlot.h"

@interface TPEmitter : NSObject < TripleplayUtilDestroyable > {
 @public
  id<PlaynCoreImmediateLayer> layer_;
  TPGenerator *generator_;
  id<JavaUtilList> initters_;
  id<JavaUtilList> effectors_;
  ReactSignal *onExhausted_;
  ReactSignal *onEmpty_;
  TPParticles *_parts_;
  TPParticleBuffer *_buffer_;
  id<ReactConnection> _conn_;
}

@property (nonatomic, retain) id<PlaynCoreImmediateLayer> layer;
@property (nonatomic, retain) TPGenerator *generator;
@property (nonatomic, retain) id<JavaUtilList> initters;
- (id<JavaUtilList>)initters OBJC_METHOD_FAMILY_NONE;
@property (nonatomic, retain) id<JavaUtilList> effectors;
@property (nonatomic, retain) ReactSignal *onExhausted;
@property (nonatomic, retain) ReactSignal *onEmpty;
@property (nonatomic, retain) TPParticles *_parts;
@property (nonatomic, retain) TPParticleBuffer *_buffer;
@property (nonatomic, retain) id<ReactConnection> _conn;

- (void)addParticlesWithInt:(int)count;
- (void)destroy;
- (void)destroyOnEmpty;
- (id)initWithTPParticles:(TPParticles *)parts
                  withInt:(int)maxParticles
       withPlaynCoreImage:(id<PlaynCoreImage>)image;
- (void)updateWithFloat:(float)now
              withFloat:(float)dt;
@end

typedef TPEmitter TripleplayParticleEmitter;

@interface TPEmitter_$1 : ReactUnitSlot {
 @public
  TPEmitter *this$0_;
}

@property (nonatomic, retain) TPEmitter *this$0;

- (void)onEmit;
- (id)initWithTPEmitter:(TPEmitter *)outer$;
@end

@interface TPEmitter_$2 : NSObject < PlaynCoreImmediateLayer_Renderer > {
 @public
  TPEmitter *this$0_;
  id<PlaynCoreImage> val$image_;
  int val$maxParticles_;
}

@property (nonatomic, retain) TPEmitter *this$0;
@property (nonatomic, retain) id<PlaynCoreImage> val$image;
@property (nonatomic, assign) int val$maxParticles;

- (void)renderWithPlaynCoreSurface:(id<PlaynCoreSurface>)surface;
- (id)initWithTPEmitter:(TPEmitter *)outer$
     withPlaynCoreImage:(id<PlaynCoreImage>)capture$0
                withInt:(int)capture$1;
@end
